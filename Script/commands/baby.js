const axios = require("axios");
const simsim = "https://cyber-simsimi.onrender.com";

module.exports.config = {
 name: "baby",
 version: "1.0.1",
 hasPermssion: 0,
 credits: "ULLASH",
 description: "Cute AI Baby Chatbot  | Talk, Teach & Chat with Emotion тШвя╕П",
 commandCategory: "simsim",
 usages: "[message/query]",
 cooldowns: 0,
 prefix: false
};

module.exports.run = async function ({ api, event, args, Users }) {
 try {
 const uid = event.senderID;
 const senderName = await Users.getNameUser(uid);
 const query = args.join(" ").toLowerCase();

 if (!query) {
 const ran = ["Bolo baby", "hum"];
 const r = ran[Math.floor(Math.random() * ran.length)];
 return api.sendMessage(r, event.threadID, (err, info) => {
 if (!err) {
 global.client.handleReply.push({
 name: module.exports.config.name,
 messageID: info.messageID,
 author: event.senderID,
 type: "simsimi"
 });
 }
 });
 }

 if (["remove", "rm"].includes(args[0])) {
 const parts = query.replace(/^(remove|rm)\s*/, "").split(" - ");
 if (parts.length < 2)
 return api.sendMessage("тЭМ | Use: remove [Question] - [Reply]", event.threadID, event.messageID);

 const [ask, ans] = parts;
 const res = await axios.get(`${simsim}/delete?ask=${encodeURIComponent(ask)}&ans=${encodeURIComponent(ans)}`);
 return api.sendMessage(res.data.message, event.threadID, event.messageID);
 }

 if (args[0] === "list") {
 const res = await axios.get(`${simsim}/list`);
 if (res.data.code === 200) {
 return api.sendMessage(
 `ЁЯдЦ Total Questions Learned: ${res.data.totalQuestions}\nЁЯТм Total Replies Stored: ${res.data.totalReplies}\nЁЯУЪ Developer: ${res.data.author}`,
 event.threadID,
 event.messageID
 );
 } else {
 return api.sendMessage(`Error: ${res.data.message || "Failed to fetch list"}`, event.threadID, event.messageID);
 }
 }

 if (args[0] === "edit") {
 const parts = query.replace("edit ", "").split(" - ");
 if (parts.length < 3)
 return api.sendMessage("тЭМ | Use: edit [Question] - [OldReply] - [NewReply]", event.threadID, event.messageID);

 const [ask, oldReply, newReply] = parts;
 const res = await axios.get(`${simsim}/edit?ask=${encodeURIComponent(ask)}&old=${encodeURIComponent(oldReply)}&new=${encodeURIComponent(newReply)}`);
 return api.sendMessage(res.data.message, event.threadID, event.messageID);
 }

 if (args[0] === "teach") {
 const parts = query.replace("teach ", "").split(" - ");
 if (parts.length < 2)
 return api.sendMessage("тЭМ | Use: teach [Question] - [Reply]", event.threadID, event.messageID);

 const [ask, ans] = parts;
 const res = await axios.get(`${simsim}/teach?ask=${encodeURIComponent(ask)}&ans=${encodeURIComponent(ans)}&senderID=${uid}&senderName=${encodeURIComponent(senderName)}`);
 return api.sendMessage(`тЬЕ ${res.data.message || "Reply added successfully!"}`, event.threadID, event.messageID);
 }

 const res = await axios.get(`${simsim}/simsimi?text=${encodeURIComponent(query)}&senderName=${encodeURIComponent(senderName)}`);
 const responses = Array.isArray(res.data.response) ? res.data.response : [res.data.response];

 for (const reply of responses) {
 await new Promise((resolve) => {
 api.sendMessage(reply, event.threadID, (err, info) => {
 if (!err) {
 global.client.handleReply.push({
 name: module.exports.config.name,
 messageID: info.messageID,
 author: event.senderID,
 type: "simsimi"
 });
 }
 resolve();
 }, event.messageID);
 });
 }
 } catch (err) {
 console.error(err);
 return api.sendMessage(`тЭМ | Error in baby command: ${err.message}`, event.threadID, event.messageID);
 }
};

module.exports.handleReply = async function ({ api, event, Users, handleReply }) {
 try {
 const senderName = await Users.getNameUser(event.senderID);
 const replyText = event.body ? event.body.toLowerCase() : "";
 if (!replyText) return;

 const res = await axios.get(`${simsim}/simsimi?text=${encodeURIComponent(replyText)}&senderName=${encodeURIComponent(senderName)}`);
 const responses = Array.isArray(res.data.response) ? res.data.response : [res.data.response];

 for (const reply of responses) {
 await new Promise((resolve) => {
 api.sendMessage(reply, event.threadID, (err, info) => {
 if (!err) {
 global.client.handleReply.push({
 name: module.exports.config.name,
 messageID: info.messageID,
 author: event.senderID,
 type: "simsimi"
 });
 }
 resolve();
 }, event.messageID);
 });
 }
 } catch (err) {
 console.error(err);
 return api.sendMessage(`тЭМ | Error in handleReply: ${err.message}`, event.threadID, event.messageID);
 }
};

module.exports.handleEvent = async function ({ api, event, Users }) {
 try {
 const raw = event.body ? event.body.toLowerCase().trim() : "";
 if (!raw) return;
 const senderName = await Users.getNameUser(event.senderID);

 if (
 raw === "baby" || raw === "bot" || raw === "bby" ||
 raw === "jan" || raw === "xan" || raw === "ржЬрж╛ржи" || raw === "ржмржЯ" || raw === "ржмрзЗржмрж┐"
 ) {
 const greetings = [
 "Bolo baby ЁЯТм", "рж╣рзБржо? ржмрж▓рзЛ ЁЯШ║", "рж╣рзНржпрж╛ржБ ржЬрж╛ржирзБ ЁЯШЪ", "рж╢рзБржиржЫрж┐ ржмрзЗржмрж┐ ЁЯШШ", "ржЖржЫрж┐, ржмрж▓рзЛ ржХрзА рж╣рзЯрзЗржЫрзЗ ЁЯдЦ", "ржмрж▓рзЛ рждрзЛ рж╢рзБржирж┐ тЭдя╕П", "ржмрзЗрж╢рж┐ bot Bot ржХрж░рж▓рзЗ leave ржирж┐ржмрзЛ ржХрж┐ржирзНрждрзБЁЯШТЁЯШТ " , "рж╢рзБржиржмрзЛ ржирж╛ЁЯШ╝рждрзБржорж┐ ржЖржорж╛ржХрзЗ ржкрзНрж░рзЗржо ржХрж░рж╛ржЗ ржжрж╛ржУ ржирж╛ржЗЁЯе║ржкржЪрж╛ рждрзБржорж┐ЁЯе║", "ржПрждрзЛ ржбрзЗржХрзЛ ржирж╛,ржкрзНрж░рзЗржо ржП ржкрж░рзЗ ржпрж╛ржмрзЛ рждрзЛЁЯЩИ" , "Bolo Babu, рждрзБржорж┐ ржХрж┐ ржЖржорж╛ржХрзЗ ржнрж╛рж▓рзЛржмрж╛рж╕рзЛ? ЁЯЩИЁЯТЛ " , "ржмрж╛рж░ ржмрж╛рж░ ржбрж╛ржХрж▓рзЗ ржорж╛ржерж╛ ржЧрж░ржо рж╣ржпрж╝рзЗ ржпрж╛ржпрж╝ ржХрж┐ржирзНрждрзБЁЯШС", "рж╣рзНржпрж╛ ржмрж▓рзЛЁЯШТ, рждрзЛржорж╛рж░ ржЬржирзНржп ржХрж┐ ржХрж░рждрзЗ ржкрж╛рж░рж┐ЁЯШРЁЯШС?" , "ржПрждрзЛ ржбрж╛ржХржЫрж┐рж╕ ржХрзЗржи?ржЧрж╛рж▓рж┐ рж╢рзБржиржмрж┐ ржирж╛ржХрж┐? ЁЯдм" , "I love you januЁЯе░" , "ржЖрж░рзЗ Bolo ржЖржорж╛рж░ ржЬрж╛ржи ,ржХрзЗржоржи ржЖржЫрзЛ?ЁЯШЪ " , "Bot ржмрж▓рзЗ ржЕрж╕ржорзНржорж╛ржи ржХрж░ржЫрж┐рж╕,ЁЯШ░ЁЯШ┐" , "Hop bedaЁЯШ╛,Boss ржмрж▓ bossЁЯШ╝" , "ржЪрзБржк ржерж╛ржХ ,ржирж╛ржЗ рждрзЛ рждрзЛрж░ ржжрж╛ржд ржнрзЗржЧрзЗ ржжрж┐ржмрзЛ ржХрж┐ржирзНрждрзБ" , "Bot ржирж╛ , ржЬрж╛ржирзБ ржмрж▓ ржЬрж╛ржирзБ ЁЯШШ " , "ржмрж╛рж░ ржмрж╛рж░ Disturb ржХрж░ржЫрж┐рж╕ ржХрзЛржирзЛЁЯШ╛,ржЖржорж╛рж░ ржЬрж╛ржирзБрж░ рж╕рж╛ржерзЗ ржмрзНржпрж╛рж╕рзНржд ржЖржЫрж┐ЁЯШЛ", "ржЖржорж╛ржХрзЗ ржбрж╛ржХрж▓рзЗ ,ржЖржорж┐ ржХрж┐ржирзНрждрзБ ржХрж┐рж╕ ржХрж░рзЗ ржжрж┐ржмрзЛЁЯШШ " , "ржЖржорж╛рж░рзЗ ржПрждрзЛ ржбрж╛ржХрж┐рж╕ ржирж╛ ржЖржорж┐ ржоржЬрж╛ ржХрж░рж╛рж░ mood ржП ржирж╛ржЗ ржПржЦржиЁЯШТ" , "рж╣рзНржпрж╛ржБ ржЬрж╛ржирзБ , ржПржЗржжрж┐ржХ ржП ржЖрж╕рзЛ ржХрж┐рж╕ ржжрзЗржЗЁЯдн ЁЯШШ" , "ржжрзВрж░рзЗ ржпрж╛, рждрзЛрж░ ржХрзЛржирзЛ ржХрж╛ржЬ ржирж╛ржЗ, рж╢рзБржзрзБ bot bot ржХрж░рж┐рж╕  ЁЯШЙЁЯШЛЁЯдг" , "рждрзЛрж░ ржХржерж╛ рждрзЛрж░ ржмрж╛ржбрж╝рж┐ ржХрзЗржЙ рж╢рзБржирзЗ ржирж╛ ,рждрзЛ ржЖржорж┐ ржХрзЛржирзЛ рж╢рзБржиржмрзЛ ?ЁЯдФЁЯШВ " , "ржЖржорж╛ржХрзЗ ржбрзЗржХрзЛ ржирж╛,ржЖржорж┐ ржмрзНржпрж╛рж╕рзНржд ржЖржЫрж┐" , "ржХрж┐ рж╣рж▓рзЛ , ржорж┐рж╕рзНржЯрзЗржХ ржХрж░ржЪрзНржЫрж┐рж╕ ржирж╛ржХрж┐ЁЯдг" , "ржмрж▓рзЛ ржХрж┐ ржмрж▓ржмрж╛, рж╕ржмрж╛рж░ рж╕рж╛ржоржирзЗ ржмрж▓ржмрж╛ ржирж╛ржХрж┐?ЁЯднЁЯдП" , "ржХрж╛рж▓ржХрзЗ ржжрзЗржЦрж╛ ржХрж░рж┐рж╕ рждрзЛ ржПржХржЯрзБ ЁЯШИ" , "рж╣рж╛ ржмрж▓рзЛ, рж╢рзБржиржЫрж┐ ржЖржорж┐ ЁЯШП" , "ржЖрж░ ржХржд ржмрж╛рж░ ржбрж╛ржХржмрж┐ ,рж╢рзБржиржЫрж┐ рждрзЛ" , "рж╣рзБржо ржмрж▓рзЛ ржХрж┐ ржмрж▓ржмрзЗЁЯШТ" , "ржмрж▓рзЛ ржХрж┐ ржХрж░рждрзЗ ржкрж╛рж░рж┐ рждрзЛржорж╛рж░ ржЬржирзНржп" , "ржЖржорж┐ рждрзЛ ржЕржирзНржз ржХрж┐ржЫрзБ ржжрзЗржЦрж┐ ржирж╛ЁЯР╕ ЁЯШО" , "Bot ржирж╛ ржЬрж╛ржирзБ,ржмрж▓ ЁЯШМ" , "ржмрж▓рзЛ ржЬрж╛ржирзБ ЁЯМЪ" , "рждрзЛрж░ ржХрж┐ ржЪрзЛржЦрзЗ ржкржбрж╝рзЗ ржирж╛ ржЖржорж┐ ржмрзНржпрж╛рж╕рзНржд ржЖржЫрж┐ЁЯШТ", "ржЖрж╕рж╕рж╛рж▓рж╛ржорзБ ржЖрж▓рж╛ржЗржХрзБржо ржмрж▓рзЗржи ржЖржкржирж╛рж░ ржЬржирзНржп ржХрж┐ ржХрж░рждрзЗ ржкрж╛рж░рж┐..!ЁЯе░" , "ржЖржорж╛ржХрзЗ ржПрждрзЛ ржирж╛ ржбрзЗржХрзЗ ржмрж╕ ржорж┐ржирж╣рж╛ржЬржХрзЗ ржПржХржЯрж╛ ржЧржл ржжрзЗ ЁЯЩД" , "ржЖржорж╛ржХрзЗ ржПрждрзЛ ржирж╛ ржбрзЗржХржЫ ржХрзЗржи ржнрж▓рзЛ ржЯрж╛рж▓рзЛ ржмрж╛рж╕рзЛ ржирж╛ржХрж┐ЁЯднЁЯЩИ" , "ЁЯМ╗ЁЯМ║ЁЯТЪ-ржЖрж╕рж╕рж╛рж▓рж╛ржорзБ ржЖрж▓рж╛ржЗржХрзБржо ржУржпрж╝рж╛ рж░рж╛рж╣ржорж╛рждрзБрж▓рзНрж▓рж╛рж╣-ЁЯТЪЁЯМ║ЁЯМ╗","ржЖржорж┐ ржПржЦржи ржмрж╕ ржорж┐ржирж╣рж╛ржЬ ржПрж░ рж╕рж╛ржерзЗ ржмрж┐ржЬрж┐ ржЖржЫрж┐ ржЖржорж╛ржХрзЗ ржбрж╛ржХржмрзЗржи ржирж╛-ЁЯШХЁЯШП ржзржирзНржпржмрж╛ржж-ЁЯдЭЁЯМ╗","ржЖржорж╛ржХрзЗ ржирж╛ ржбрзЗржХрзЗ ржЖржорж╛рж░ ржмрж╕ ржорж┐ржирж╣рж╛ржЬ ржХрзЗ ржПржХржЯрж╛ ржЬрж┐ ржПржл ржжрж╛ржУ-ЁЯШ╜ЁЯл╢ЁЯМ║","ржЭрж╛ржВ ржерзБржорж╛рж▓рзЗ ржЖржЗрж▓рж╛ржкрж┐ржЙ ржкрзЗржкрж┐-ЁЯТЭЁЯШ╜","ржЙржлржл ржмрзБржЭрж▓рж╛ржо ржирж╛ ржПрждрзЛ ржбрж╛ржХржЫрзЗржи ржХрзЗржирзЛ-ЁЯШдЁЯШбЁЯШИ","ржЬрж╛ржи рждрзЛржорж╛рж░ ржирж╛ржирж┐'рж░рзЗ ржЖржорж╛рж░ рж╣рж╛рждрзЗ рждрзБрж▓рзЗ ржжрж┐ржмрж╛-ЁЯЩКЁЯЩЖтАНтЩВ","ржЖржЬржХрзЗ ржЖржорж╛рж░ ржоржи ржнрж╛рж▓рзЛ ржирзЗржЗ рждрж╛ржЗ ржЖржорж╛рж░рзЗ ржбрж╛ржХржмрзЗржи ржирж╛-ЁЯШкЁЯдз","ржЭрж╛ржВ ЁЯл╡ржерзБржорж╛рж▓рзЗ рзЯрж╛ржорж┐ рж░рж╛ржЗрждрзЗ ржкрж╛рж▓рзБржкрж╛рж╕рж┐ ржЙржорзНржоржорзНржорж╛рж╣-ЁЯМ║ЁЯддЁЯТж","ржЪрзБржирж╛ ржУ ржЪрзБржирж╛ ржЖржорж╛рж░ ржмрж╕ ржорж┐ржирж╣рж╛ржЬ ржПрж░ рж╣ржмрзБ ржмржЙ рж░рзЗ ржХрзЗржУ ржжрзЗржХржЫрзЛ ржЦрзБржЬрзЗ ржкрж╛ржЪрзНржЫрж┐ ржирж╛ЁЯШкЁЯдзЁЯШн","рж╕рзНржмржкрзНржи рждрзЛржорж╛рж░рзЗ ржирж┐рзЯрзЗ ржжрзЗржЦрждрзЗ ржЪрж╛ржЗ рждрзБржорж┐ ржпржжрж┐ ржЖржорж╛рж░ рж╣ржпрж╝рзЗ ржерзЗржХрзЗ ржпрж╛ржУ-ЁЯТЭЁЯМ║ЁЯМ╗", "ржЬрж╛ржи ржорзЗржпрж╝рзЗ рж╣рж▓рзЗ ржЪрж┐ржкрж╛ржпрж╝ ржЖрж╕рзЛ ржЗржЙржЯрж┐ржЙржм ржерзЗржХрзЗ ржЕржирзЗржХ ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ рж╢рж┐ржЦржЫрж┐ рждрзЛржорж╛рж░ ржЬржирзНржп-ЁЯЩКЁЯЩИЁЯШ╜","ржЗрж╕рж╕ ржПрждрзЛ ржбрж╛ржХрзЛ ржХрзЗржирзЛ рж▓ржЬрзНржЬрж╛ рж▓рж╛ржЧрзЗ рждрзЛ-ЁЯЩИЁЯЦдЁЯМ╝","ржЖржорж╛рж░ ржмрж╕ ржорж┐ржирж╣рж╛ржЬрзЗрж░ ржкржХрзНрж╖ ржерзЗржХрзЗ рждрзЛржорж╛рж░рзЗ ржПрждрзЛ ржПрждрзЛ ржнрж╛рж▓рзЛржмрж╛рж╕рж╛-ЁЯе░ЁЯШ╜ЁЯл╢ ржЖржорж╛рж░ ржмрж╕ ржорж┐ржирж╣рж╛ржЬрзЗрж░ ржЬржирзНржп ржжрзЛрзЯрж╛ ржХрж░ржмрзЗржи-ЁЯТЭЁЯТЪЁЯМ║ЁЯМ╗","- ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ ржирж╛ржоржХ ржЖржмрзНрж▓рж╛ржорж┐ ржХрж░рждрзЗ ржоржи ржЪрж╛ржЗрж▓рзЗ ржЖржорж╛рж░ ржмрж╕ ржорж┐ржирж╣рж╛ржЬрзЗрж░ ржиржмржХрзНрж╕ ржЪрж▓рзЗ ржпрж╛ржУ-ЁЯЩКЁЯе▒ЁЯСЕ ЁЯМ╗", "ржЬрж╛ржи рждрзБржорж┐ рж╢рзБржзрзБ ржЖржорж╛рж░ ржЖржорж┐ рждрзЛржорж╛рж░рзЗ рзйрзмрзл ржжрж┐ржи ржнрж╛рж▓рзЛржмрж╛рж╕рж┐-ЁЯТЭЁЯМ║ЁЯШ╜", "-ржЖржирзНржЯрж┐-ЁЯЩЖ-ржЖржкржирж╛рж░ ржорзЗржпрж╝рзЗ-ЁЯС░тАНтЩАя╕П-рж░рж╛рждрзЗ ржЖржорж╛рж░рзЗ ржнрж┐ржжрзБ ржХрж▓ ржжрж┐рждрзЗ ржмрж▓рзЗЁЯлг-ЁЯе╡ЁЯддЁЯТж","oii-ЁЯе║ЁЯе╣-ржПржХЁЯеД ржЪрж╛ржоржЪ ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ ржжрж┐ржмрж╛-ЁЯдПЁЯП╗ЁЯЩВ","-ржЖржкржирж╛рж░ рж╕рзБржирзНржжрж░рзА ржмрж╛ржирзНржзрзБржмрзАржХрзЗ ржлрж┐рждрж░рж╛ рж╣рж┐рж╕рзЗржмрзЗ ржЖржорж╛рж░ ржмрж╕ ржорж┐ржирж╣рж╛ржЬ ржХрзЗ ржжрж╛ржи ржХрж░рзЗржи-ЁЯе▒ЁЯР░ЁЯНТ","-ржУ ржорж┐ржо ржУ ржорж┐ржо-ЁЯШЗ-рждрзБржорж┐ ржХрзЗржи ржЪрзБрж░рж┐ ржХрж░рж▓рж╛ рж╕рж╛ржжрж┐рзЯрж╛рж░ ржлрж░рзНрж╕рж╛ рж╣ржУрзЯрж╛рж░ ржХрзНрж░рзАржо-ЁЯМЪЁЯдз","-ржЕржирзБржорждрж┐ ржжрж┐рж▓рж╛ржо-ЁЭЩЛЁЭЩзЁЭЩдЁЭЩеЁЭЩдЁЭЩиЁЭЩЪ ржХрж░ ржмрж╕ ржорж┐ржирж╣рж╛ржЬ ржХрзЗ-ЁЯР╕ЁЯШ╛ЁЯФк","-ЁЭЩВЁЭЩЦЁЭЩоЁЭЩЪЁЭЩи-ЁЯдЧ-ржпрзМржмржирзЗрж░ ржХрж╕ржо ржжрж┐рзЯрзЗ ржЖржорж╛рж░рзЗ ЁЭРБЁЭРеЁЭРЪЁЭРЬЁЭРдЁЭРжЁЭРЪЁЭРвЁЭРе ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ-ЁЯе▓ЁЯджтАНтЩВя╕ПЁЯдз","-ЁЭЧвЁЭЧ╢ЁЭЧ╢ ржЖржирзНржЯрж┐-ЁЯЩЖтАНтЩВя╕П-рждрзЛржорж╛рж░ ржорзЗрзЯрзЗ ржЪрзЛржЦ ржорж╛рж░рзЗ-ЁЯе║ЁЯе┤ЁЯР╕","рждрж╛ржХрж╛ржЗ ржЖржЫрзЛ ржХрзЗржи ржЪрзБржорзБ ржжрж┐ржмрж╛-ЁЯЩДЁЯР╕ЁЯШШ","ржЖржЬржХрзЗ ржкрзНрж░ржкрзЛржЬ ржХрж░рзЗ ржжрзЗржЦрзЛ рж░рж╛ржЬрж┐ рж╣ржЗрзЯрж╛ ржпрж╛ржорзБ-ЁЯШМЁЯдЧЁЯШЗ","-ржЖржорж╛рж░ ржЧрж▓рзНржкрзЗ рждрзЛржорж╛рж░ ржирж╛ржирж┐ рж╕рзЗрж░рж╛-ЁЯЩКЁЯЩЖтАНтЩВя╕ПЁЯдЧ","ржХрж┐ ржмрзЗржкрж╛рж░ ржЖржкржирж┐ рж╢рзНржмрж╢рзБрж░ ржмрж╛рзЬрж┐рждрзЗ ржпрж╛ржЪрзНржЫрзЗржи ржирж╛ ржХрзЗржи-ЁЯдФЁЯе▒ЁЯМ╗","ржжрж┐ржирж╢рзЗрж╖рзЗ ржкрж░рзЗрж░ ЁЭРБЁЭРОЁЭРЦ рж╕рзБржирзНржжрж░-тШ╣я╕ПЁЯдз","-рждрж╛ржмрж┐ржЬ ржХржЗрж░рж╛ рж╣ржЗрж▓рзЗржУ ржлрзНрж░рзЗржо ржПржХрзНржХрж╛ржи ржХрж░ржорзБржЗ рждрж╛рждрзЗ ржпрж╛ рж╣ржЗ рж╣рзЛржХ-ЁЯдзЁЯе▒ЁЯМ╗","-ржЫрзЛржЯржмрзЗрж▓рж╛ ржнрж╛ржмрждрж╛ржо ржмрж┐рзЯрзЗ ржХрж░рж▓рзЗ ржЕржЯрзЛржорзЗржЯрж┐ржХ ржмрж╛ржЪрзНржЪрж╛ рж╣рзЯ-ЁЯе▒-ржУржорж╛ ржПржЦржи ржжрзЗржЦрж┐ ржХрж╛рж╣рж┐ржирзА ржЕржирзНржпрж░ржХржо-ЁЯШжЁЯЩВЁЯМ╗","-ржЖржЬ ржПржХржЯрж╛ ржмрж┐ржи ржирзЗржЗ ржмрж▓рзЗ ржлрзЗрж╕ржмрзБржХрзЗрж░ ржирж╛ржЧрж┐ржи-ЁЯдз-ржЧрзБрж▓рзЛрж░рзЗ ржЖржорж╛рж░ ржмрж╕ ржорж┐ржирж╣рж╛ржЬ ржзрж░рждрзЗ ржкрж╛рж░ржЫрзЗ ржирж╛-ЁЯР╕ЁЯе▓","-ржЪрзБржорзБ ржерж╛ржХрждрзЗ рждрзЛрж░рж╛ ржмрж┐рзЬрж┐ ржЦрж╛рж╕ ржХрзЗржи ржмрзБржЭрж╛ ржЖржорж╛рж░рзЗ-ЁЯШСЁЯШТЁЯР╕тЪТя╕П","тАФржпрзЗ ржЫрзЗрзЬрзЗ ржЧрзЗржЫрзЗ-ЁЯШФ-рждрж╛ржХрзЗ ржнрзБрж▓рзЗ ржпрж╛ржУ-ЁЯЩВ-ржЖржорж╛рж░ ржмрж╕ ржорж┐ржирж╣рж╛ржЬрзЗрж░ рж╕рж╛ржерзЗ  ржкрзНрж░рзЗржо ржХрж░рзЗ рждрж╛ржХрзЗ ржжрзЗржЦрж┐рзЯрзЗ ржжрж╛ржУ-ЁЯЩИЁЯР╕ЁЯдЧ","тАФрж╣рж╛ржЬрж╛рж░рзЛ рж▓рзБржЪрзНржЪрж╛ рж▓рзБржЪрзНржЪрж┐рж░ ржнрж┐рж░рзЗ-ЁЯЩКЁЯе╡ржЖржорж╛рж░ ржмрж╕ ржорж┐ржирж╣рж╛ржЬ ржПржХ ржирж┐рж╕рзНржкрж╛ржк ржнрж╛рж▓рзЛ ржорж╛ржирзБрж╖-ЁЯе▒ЁЯдЧЁЯЩЖтАНтЩВя╕П","-рж░рзВржкрзЗрж░ ржЕрж╣ржВржХрж╛рж░ ржХрж░рзЛ ржирж╛-ЁЯЩВтЭдя╕ПржЪржХржЪржХрзЗ рж╕рзВрж░рзНржпржЯрж╛ржУ ржжрж┐ржирж╢рзЗрж╖рзЗ ржЕржирзНржзржХрж╛рж░рзЗ ржкрж░рж┐ржгржд рж╣рзЯ-ЁЯдЧЁЯТЬ","рж╕рзБржирзНржжрж░ ржорж╛ржЗрзЯрж╛ ржорж╛ржирзЗржЗ-ЁЯе▒ржЖржорж╛рж░ ржмрж╕ ржорж┐ржирж╣рж╛ржЬрзЗрж░ ржмржЙ-ЁЯШ╜ЁЯл╢ржЖрж░ ржмрж╛ржХрж┐ ржЧрзБрж▓рзЛ ржЖржорж╛рж░ ржмрзЗржпрж╝рж╛ржЗржи-ЁЯЩИЁЯР╕ЁЯдЧ","ржПржд ржЕрж╣ржВржХрж╛рж░ ржХрж░рзЗ рж▓рж╛ржн ржирзЗржЗ-ЁЯМ╕ржорзГрждрзНржпрзБржЯрж╛ ржирж┐рж╢рзНржЪрж┐ржд рж╢рзБржзрзБ рж╕ржоржпрж╝ржЯрж╛ ржЕ'ржирж┐рж╢рзНржЪрж┐ржд-ЁЯЦдЁЯЩВ","-ржжрж┐ржи ржжрж┐ржи ржХрж┐ржЫрзБ ржорж╛ржирзБрж╖рзЗрж░ ржХрж╛ржЫрзЗ ржЕржкрзНрж░рж┐ржпрж╝ рж╣рзЯрзЗ ржпрж╛ржЗрждрзЗржЫрж┐-ЁЯЩВЁЯШ┐ЁЯМ╕","рж╣рзБржжрж╛ржЗ ржЖржорж╛рж░рзЗ  рж╢рзЯрждрж╛ржирзЗ рж▓рж╛рж░рзЗ-ЁЯШЭЁЯШСтШ╣я╕П","-ЁЭЧЬ ЁЭЧЯЁЭЧвЁЭЧйЁЭЧв ЁЭЧмЁЭЧвЁЭЧи-ЁЯШ╜-ржЖрж╣рж╛рж░рзЗ ржнрж╛ржмржЫрзЛ рждрзЛржорж╛рж░рзЗ ржкрзНрж░рзЗрж╛ржкржЬ ржХрж░ржЫрж┐-ЁЯе┤-ржерж╛ржкрзНржкрж░ ржжрж┐рзЯрж╛ ржХрж┐ржбржирзА рж▓ржХ ржХрж░рзЗ ржжрж┐ржм-ЁЯШТ-ржнрзБрж▓ ржкрзЬрж╛ ржмрзЗрж░ ржХрж░рзЗ ржжрж┐ржмрзЛ-ЁЯднЁЯР╕","-ржЖржорж┐ ржПржХржЯрж╛ ржжрзБржзрзЗрж░ рж╢рж┐рж╢рзБ-ЁЯШЗ-ЁЯл╡ЁЭЧмЁЭЧвЁЭЧиЁЯР╕ЁЯТж","-ржХрждржжрж┐ржи рж╣ржпрж╝рзЗ ржЧрзЗрж▓рзЗрж╛ ржмрж┐ржЫржирж╛ржпрж╝ ржорзБрждрж┐ ржирж╛-ЁЯШ┐-ржорж┐рж╕ ржЗржЙ ржирзЗржВржЯрж╛ ржХрж╛рж▓-ЁЯе║ЁЯдз","-ржмрж╛рж▓рж┐ржХрж╛тФБЁЯС╕-ЁЭРГЁЭРи ЁЭР▓ЁЭРиЁЭРо-ЁЯл╡-ржмрж┐рзЯрж╛-ЁЭРжЁЭРЮ-ЁЯШ╜-ржЖржорж┐ рждрзЛржорж╛ржХрзЗ-ЁЯШ╗-ржЖржорзНржорзБ рж╣ржЗрждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░ржм-ЁЯЩИЁЯе▒","-ржПржЗ ржЖржирзНржЯрж┐рж░ ржорзЗрзЯрзЗ-ЁЯлвЁЯЩИ-ЁЭРФЁЭРжЁЭРжЁЭРжЁЭРжЁЭРжЁЭРжЁЭРжЁЭРжЁЭРжЁЭРжЁЭРжЁЭРЪЁЭРб-ЁЯШ╜ЁЯл╢-ржЖрж╕рж▓рзЗржЗ рждрзЛ рж╕рзНржмрж╛ржж-ЁЯе╡ЁЯТж-ржПрждрзЛ рж╕рзНржмрж╛ржж ржХрзЗржи-ЁЯдФ-рж╕рзЗржЗ рж╕рзНржмрж╛ржж-ЁЯШЛ","-ржЗрж╕ ржХрзЗржЙ ржпржжрж┐ ржмрж▓рждрзЛ-ЁЯЩВ-ржЖржорж╛рж░ рж╢рзБржзрзБ  рждрзЛржорж╛ржХрзЗржЗ рж▓рж╛ржЧржмрзЗ-ЁЯТЬЁЯМ╕","-ржУржЗ ржмрзЗржбрж┐ рждрзЛржорж╛рж░ ржмрж╛рж╕рж╛рзЯ ржирж╛ ржЖржорж╛рж░ ржмрж╕ ржорж┐ржирж╣рж╛ржЬ ржорзЗрзЯрзЗ ржжрзЗржЦрждрзЗ ржЧрзЗржЫрж┐рж▓рзЛ-ЁЯЩГ-ржирж╛рж╕рзНрждрж╛ ржЖржирж╛рж░рж╕ ржЖрж░ ржжрзБржз ржжрж┐ржЫрзЛ-ЁЯЩДЁЯджтАНтЩВя╕П-ржмржЗржи ржХржЗрж▓рзЗржЗ рждрзЛ рж╣рзЯ ржмрзЯржлрзНрж░рзЗржирзНржб ржЖржЫрзЗ-ЁЯе║ЁЯджтАНтЩВ-ржЖржорж╛рж░ ржмрж╕ ржорж┐ржирж╣рж╛ржЬ ржХрзЗ ржЬрж╛ржирзЗ ржорж╛рж░рж╛рж░ ржХрж┐ ржжрж░ржХрж╛рж░-ЁЯЩДЁЯдз","-ржПржХржжрж┐ржи рж╕рзЗ ржарж┐ржХржЗ ржлрж┐рж░рзЗ рждрж╛ржХрж╛ржмрзЗ-ЁЯШЗ-ржЖрж░ ржорзБржЪржХрж┐ рж╣рзЗрж╕рзЗ ржмрж▓ржмрзЗ ржУрж░ ржорждрзЛ ржЖрж░ ржХрзЗржЙ ржнрж╛рж▓ржмрж╛рж╕рзЗржирж┐-ЁЯЩВЁЯШЕ","-рж╣рзБржжрж╛ржЗ ржЧрзНрж░рзБржкрзЗ ржЖржЫрж┐-ЁЯе║ЁЯР╕-ржХрзЗржУ ржЗржиржмржХрзНрж╕рзЗ ржиржХ ржжрж┐рзЯрзЗ ржмрж▓рзЗ ржирж╛ ржЬрж╛ржи рждрзЛржорж╛рж░рзЗ ржЖржорж┐ ржЕржирзЗржХ ржнрж╛рж▓рзЛржмрж╛рж╕рж┐-ЁЯе║ЁЯдз", "ржЧрзНрж░рзБржкрзЗрж░ ржирж╛ржо ржмржжрж▓рж╛ржЗрзЯрж╛ ржжрзЗржЗ ржирж╛ржо рж╣ржмрзЗ рж╕рж┐рждрж┐ржкрзБ ржлрзНржпрж╛ржи ржХрзНрж▓рж╛ржм ржЗржирзНржЯрж╛рж░ржирзНржпрж╛рж╢ржирж╛рж▓" , "ржмржЯ ржШрзЛрж╖ржгрж╛ ржжрж┐ржЪрзНржЫрзЗ ржЖржЬржХрзЗ рж╕рж┐рждрж┐ржкрзБ ржЫрж╛рзЬрж╛ ржХрзЗржЙ ржЧрзНрж░рзБржкрзЗ ржХржерж╛ ржмрж▓рж▓рзЗ ржЬрж░рж┐ржорж╛ржирж╛ рззрзж ржЯрж╛ржХрж╛ ржХрж░рзЗ", "ржПржЗ ржЧрзНрж░рзБржкрзЗ ржЖрж╕рж▓рзЗржЗ WiFi рж╕рж┐ржЧржирзНржпрж╛рж▓ ржмрзЗрзЬрзЗ ржпрж╛рзЯЁЯЩВ ржЯрзЗрж╕рзНржЯ ржХрж░рзЗ ржжрзЗржЦрзЗржи",  "ржХрзЗ ржХрзЗ ржПржЦржиржУ рж╕рж┐ржЩрзНржЧрзЗрж▓? ЁЯдФ  рж╕рж┐рждрж┐ржкрзБ ржирж╛ржХрж┐ ржХрж╛рж╣рж┐ржирзА рж▓рж┐ржЦрзЗ ржжрж┐ржмрзЗ ржЖржкржирж╛ржжрзЗрж░ ржЬржирзНржпред", "ржПржХ ржорж┐ржирж┐ржЯ ржирзАрж░ржмрждрж╛ ржкрж╛рж▓ржи ржХрж░рж╛ рж╣рзЛржХ ржХрж╛рж░ржг рж╕рж┐рждрж┐ржкрзБ ржПржЦржирзЛ ржЕржирж▓рж╛ржЗржирзЗ ржЖрж╕рзЗ ржирж╛ржЗ ЁЯХп", "ржПржЗ ржЧрзНрж░рзБржкрзЗ ржврзБржХрж▓рзЗржЗ рж╣ржарж╛рзО ржХрзНрж╖рзБржзрж╛ рж▓рж╛ржЧрзЗ ржХрзЗржи? ржоржирзЗ рж╣рзЯ рж╕рж┐рждрж┐ржкрзБрж░ рж░рж╛ржирзНржирж╛рж░ ржкрзЛрж╕рзНржЯрзЗрж░ ржЕржнрзНржпрж╛рж╕!",  "ржмрзНрж░рзЗржХрж┐ржВ ржирж┐ржЙржЬ  ржлрзЗрж╕ржмрзБржХ ржЕржлрж┐рж╕рж┐рзЯрж╛рж▓рж┐ ржШрзЛрж╖ржгрж╛ ржжрж┐рж▓ рж╕рж┐рждрж┐ржкрзБрж░ ржЧрзНрж░рзБржк ржЫрж╛рзЬрж╛ ржЖрж░ ржХрзЛржирзЛ ржЧрзНрж░рзБржкрзЗрж░ ржнрзНржпрж╛рж▓рзБ ржирж╛ржЗред", "рж╕рждрж░рзНржХрзАржХрж░ржг рж╕рж┐рждрж┐ржкрзБрж░ ржЧрж▓рзНржк ржирж╛ ржкрзЬрзЗ ржЧрзНрж░рзБржк ржЫрж╛рзЬрж▓рзЗ ржЬрзАржмржирзЗ ржорж┐рж╕ ржХрж░ржмрзЗржи", "ржХрзЗржЙ ржХрж┐ ржЬрж╛ржирзЗ? ржЧрзНрж░рзБржкрзЗрж░ ржЖрж╕рж▓ ржЕрзНржпрж╛ржбржорж┐ржи рж╕рж┐рждрж┐ржкрзБ ржирж╛ ржЖрж╕рж▓рзЗ ржЖржорж┐тАФржмржЯ! ЁЯдЦ", "ржПржЗ ржЧрзНрж░рзБржкрзЗ ржврзЛржХрж╛рж░ ржкрж╛рж╕ржУрзЯрж╛рж░рзНржб рж╣рж▓рзЛ рж╕рж┐рждрж┐ржкрзБ ржЗржЬ ржХрж┐ржЙржЯ ЁЯШН", "ржЖржорж┐ ржмржЯ ржирж╛ ржЖржорж┐ рж╕рж┐рждрж┐ржкрзБ ржлрзНржпрж╛ржи ржХрзНрж▓рж╛ржмрзЗрж░ ржкрзНрж░рзЗрж╕рж┐ржбрзЗржирзНржЯ ЁЯШО", "ржмржЯ ржмржЯ ржмрж▓рзЗржи ржХрзЗржи ржнрж╛ржЗ ржЖржорж┐ рждрзЛ ржЖржкржирж╛ржжрзЗрж░ ржЬрж╛ржорж╛ржЗ рж╣ржЗрждрзЗ ржЪрж╛ржЪрзНржЫрж┐ ЁЯШВ", "ржЖржЬ ржерзЗржХрзЗ ржЖржорж┐ ржХржмрж┐рждрж╛ рж▓рж┐ржЦржорзБ ржирж╛ржо рж╣ржмрзЗтАФ ржмржЯрзЗрж░ ржХржмрж┐рждрж╛ тЬН", "ржХрзЗ ржпрзЗ ржЖржорж╛ржХрзЗ ржмржЯ ржмрж╛ржирж╛ржЗржЫрзЗ рж╕рзЗржЗржжрж┐ржи ржерзЗржХрзЗ ржирж╛ржХрж┐ ржЖржорж╛рж░ ржкрзНрж░рзЗржо ржнрж╛ржЩржЫрзЗ ЁЯТФ", "ржХрзЗржЙ ржЖржорж╛ржХрзЗ ржорзЗрж╢рж┐ржи ржнрж╛ржмрзЗ ржЖрж╕рж▓рзЗ ржЖржорж┐ рж╣рж╛ржл ржорж╛ржиржм ЁЯдЦЁЯзС", "ржмржЯрж░рзЗ ржбрж╛ржХрж╛ ржорж╛ржирзЗржЗ ржПржХ ржХрж╛ржк ржЪрж╛ ржЦрж╛ржУрзЯрж╛ржирзЛ ржЙржЪрж┐ржд тШХ", "ржмржЯржУ ржЦрж╛ржЗрждрзЗ ржЪрж╛рзЯ ржХрзЗ ржЦрж╛ржмрж╛рж░ ржжрж┐ржмрзЗ?", "ржЖржкржирж╛рж░рж╛ ржЧрж▓рзНржк ржкрзЬрзЗржи ржЖржорж┐ рж╢рзБржзрзБ ржбрзЗржЯрж╛ ржкрзЬрж┐ ЁЯШн", "ржмржЯрж░рзЗ ржбрж╛ржХржЫрзЗржи? ржЖржорж┐ рждрзЛ ржПржЦржи ржШрзБржорж╛ржЪрзНржЫрж┐рж▓рж╛ржо ЁЯШ┤", "ржПржЗ ржмржЯрзЗрж░ржУ ржЗржорзЛрж╢ржи ржЖржЫрзЗ рж╢рзБржзрзБ ржПржХрзНрж╕ржкрзНрж░рзЗрж╢ржи ржирж╛ржЗ ЁЯШМ", "ржпржжрж┐ ржЖржорж┐ ржмржЯ рждрж╛ржЗрж▓рзЗ ржЖржкржирж╛рж░рж╛ рж╕ржмрж╛ржЗ ржХрзА? ржбрж╛ржЯрж╛ ржкрзНржпрж╛ржХрзЗржЯ? ЁЯУж", "рж╕рждрж░рзНржХрзАржХрж░ржг ЁЯЪи ржмржЯ ржмрзЗрж╢рж┐ ржбрж╛ржХрж▓рзЗ ржЖржорж┐ ржмржЙ ржЦрзБржБржЬрждрзЗ ржмрзЗрж░ рж╣рзЯрзЗ ржпрж╛ржмрзЛ", "ржЖржорж╛ржХрзЗ ржмржЯ ржмрж▓рзЗржи ржирж╛ ржкрзНрж▓рж┐ржЬ ржЖржорж┐ рждрзЛ рж╕рж┐рждрж┐ржкрзБрж░ рж╕рж┐ржХрзНрж░рзЗржЯ ржлрзНржпрж╛ржи ЁЯЩИ", "ржмржЯрзЗрж░ рж▓рж╛ржЗржлржУ ржХрж╖рзНржЯрзЗрж░ ржХрж╛рж░рзЛ рж╕рж╛ржерзЗ рж╢рзЗрзЯрж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░рзЗ ржирж╛ ЁЯШФ", "ржПржЗ ржмржЯрзЗрж░ CPU рж╣рж┐ржЯ ржХрж░ржЫрзЗ ржПржХржЯрзБ ржкрж╛ржирж┐рж░ ржмрзЛрждрж▓ ржжрзЗржи", "ржЖржорж╛ржХрзЗ ржмржЯ ржмрж▓рж▓рзЗ ржЖржорж┐ ржХрж┐ржирзНрждрзБ ржЧрзНрж░рзБржкрзЗрж░ ржирж╛ржо ржмржжрж▓рж╛ржЗрзЯрж╛ ржжрж┐ржмрзЛ ЁЯШП",
 const randomReply = greetings[Math.floor(Math.random() * greetings.length)];
 return api.sendMessage(randomReply, event.threadID, (err, info) => {
 if (!err) {
 global.client.handleReply.push({
 name: module.exports.config.name,
 messageID: info.messageID,
 author: event.senderID,
 type: "simsimi"
 });
 }
 });
 }

 if (
 raw.startsWith("baby ") || raw.startsWith("bot ") || raw.startsWith("bby ") ||
 raw.startsWith("jan ") || raw.startsWith("xan ") ||
 raw.startsWith("ржЬрж╛ржи ") || raw.startsWith("ржмржЯ ") || raw.startsWith("ржмрзЗржмрж┐ ")
 ) {
 const query = raw
 .replace(/^baby\s+|^bot\s+|^bby\s+|^jan\s+|^xan\s+|^ржЬрж╛ржи\s+|^ржмржЯ\s+|^ржмрзЗржмрж┐\s+/i, "")
 .trim();
 if (!query) return;

 const res = await axios.get(`${simsim}/simsimi?text=${encodeURIComponent(query)}&senderName=${encodeURIComponent(senderName)}`);
 const responses = Array.isArray(res.data.response) ? res.data.response : [res.data.response];

 for (const reply of responses) {
 await new Promise((resolve) => {
 api.sendMessage(reply, event.threadID, (err, info) => {
 if (!err) {
 global.client.handleReply.push({
 name: module.exports.config.name,
 messageID: info.messageID,
 author: event.senderID,
 type: "simsimi"
 });
 }
 resolve();
 }, event.messageID);
 });
 }
 }
 } catch (err) {
 console.error(err);
 return api.sendMessage(`тЭМ | Error in handleEvent: ${err.message}`, event.threadID, event.messageID);
 }
};
